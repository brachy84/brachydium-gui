plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		// Shedaniel's maven (Architectury API)
		url = "https://maven.architectury.dev"
		content {
			includeGroup "me.shedaniel"
		}
	}

	// REI
	maven { url "https://maven.shedaniel.me/" }

	maven {
		// saps.dev Maven (KubeJS and Rhino)
		// you can also use Lat's Maven @ https://maven.latvian.dev/
		url = "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
		}
	}
	// Astarre
	maven {
		url "https://storage.googleapis.com/devan-maven/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Fabric/Quilt Loom and Architectury's "forgeloom"
	//modImplementation("dev.latvian.mods:kubejs-fabric:${project.kubejs_version}")

	// these two are unfortunately needed since fg.deobf doesn't respect transitive dependencies as of yet
	//implementation "dev.latvian.mods:rhino:${rhino_version}"
	//implementation fg.deobf("me.shedaniel:architectury-forge:${architectury_version}")

	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 16
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			url 'https://repo.repsy.io/mvn/${project.maven_group}/${project.archives_base_name}'
			credentials {
				username = System.getenv("REPSY_USERNAME")
				password = System.getenv("REPSY_PASSWORD")
			}
		}
	}
}
